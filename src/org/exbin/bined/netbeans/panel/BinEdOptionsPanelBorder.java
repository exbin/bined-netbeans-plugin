/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.bined.netbeans.panel;

import org.exbin.bined.swing.extended.ExtCodeArea;

/**
 * Hexadecimal editor options panel with border.
 *
 * @version 0.2.0 2018/10/27
 * @author ExBin Project (http://exbin.org)
 */
public class BinEdOptionsPanelBorder extends javax.swing.JPanel {

    public BinEdOptionsPanelBorder() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        optionsPanel = new org.exbin.bined.netbeans.panel.BinEdOptionsPanel();

        setLayout(new java.awt.BorderLayout());

        optionsPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        add(optionsPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.exbin.bined.netbeans.panel.BinEdOptionsPanel optionsPanel;
    // End of variables declaration//GEN-END:variables

    public void setFromCodeArea(ExtCodeArea codeArea) {
        optionsPanel.setFromCodeArea(codeArea);
    }

    public void applyToCodeArea(ExtCodeArea codeArea) {
        optionsPanel.applyToCodeArea(codeArea);
        codeArea.repaint();
    }

    public boolean isShowValuesPanel() {
        return true; // TODO optionsPanel.isShowValuesPanel();
    }

    public void setShowValuesPanel(boolean flag) {
        // TODO optionsPanel.setShowValuesPanel(flag);
    }

    public void store() {
        optionsPanel.store();
    }

    public boolean isDeltaMemoryMode() {
        return true; // TODO optionsPanel.isDeltaMemoryMode();
    }
}
