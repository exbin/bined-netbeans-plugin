/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.bined.gui;

import java.util.ResourceBundle;
import javax.annotation.Nonnull;
import javax.annotation.ParametersAreNonnullByDefault;
import org.exbin.bined.CodeAreaUtils;
import org.exbin.framework.bined.operation.InsertDataOperation.FillWithType;
import org.exbin.framework.utils.LanguageUtils;
import org.exbin.framework.utils.WindowUtils;

/**
 * Insert data panel.
 *
 * @version 0.2.1 2021/09/24
 * @author ExBin Project (http://exbin.org)
 */
@ParametersAreNonnullByDefault
public class InsertDataPanel extends javax.swing.JPanel {

    private final java.util.ResourceBundle resourceBundle = LanguageUtils.getResourceBundleByClass(InsertDataPanel.class);

    private Controller controller;

    public InsertDataPanel() {
        initComponents();
    }

    @Nonnull
    public ResourceBundle getResourceBundle() {
        return resourceBundle;
    }

    public void setController(Controller controller) {
        this.controller = controller;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fillWithbuttonGroup = new javax.swing.ButtonGroup();
        sizeLabel = new javax.swing.JLabel();
        sizePanel = new org.exbin.framework.bined.gui.BaseSwitchableSpinnerPanel();
        fillWithLabel = new javax.swing.JLabel();
        emptyRadioButton = new javax.swing.JRadioButton();
        spaceRadioButton = new javax.swing.JRadioButton();
        randomRadioButton = new javax.swing.JRadioButton();
        sampleRadioButton = new javax.swing.JRadioButton();
        sampleDataButton = new javax.swing.JButton();

        sizeLabel.setText(resourceBundle.getString("sizeLabel.text")); // NOI18N

        fillWithLabel.setText(resourceBundle.getString("fillWithLabel.text")); // NOI18N

        fillWithbuttonGroup.add(emptyRadioButton);
        emptyRadioButton.setSelected(true);
        emptyRadioButton.setText(resourceBundle.getString("emptyRadioButton.text")); // NOI18N

        fillWithbuttonGroup.add(spaceRadioButton);
        spaceRadioButton.setText(resourceBundle.getString("spaceRadioButton.text")); // NOI18N

        fillWithbuttonGroup.add(randomRadioButton);
        randomRadioButton.setText(resourceBundle.getString("randomRadioButton.text")); // NOI18N

        fillWithbuttonGroup.add(sampleRadioButton);
        sampleRadioButton.setText(resourceBundle.getString("sampleRadioButton.text")); // NOI18N

        sampleDataButton.setText(resourceBundle.getString("sampleDataButton.text")); // NOI18N
        sampleDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sampleDataButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(sampleDataButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sizePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                            .addComponent(emptyRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(randomRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sizeLabel)
                                    .addComponent(fillWithLabel))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(sampleRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spaceRadioButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sizeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sizePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fillWithLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emptyRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spaceRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(randomRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sampleRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sampleDataButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sampleDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sampleDataButtonActionPerformed
        if (controller != null) {
            controller.sampleDataAction();
        }
    }//GEN-LAST:event_sampleDataButtonActionPerformed

    @Nonnull
    public FillWithType getFillWithType() {
        if (randomRadioButton.isSelected()) {
            return FillWithType.RANDOM;
        } else if (sampleRadioButton.isSelected()) {
            return FillWithType.SAMPLE;
        } else if (spaceRadioButton.isSelected()) {
            return FillWithType.SPACE;
        }

        return FillWithType.EMPTY;
    }

    public void setFillWith(FillWithType fillWithType) {
        switch (fillWithType) {
            case EMPTY: {
                emptyRadioButton.setSelected(true);
                break;
            }
            case SPACE: {
                spaceRadioButton.setSelected(true);
                break;
            }
            case RANDOM: {
                randomRadioButton.setSelected(true);
                break;
            }
            case SAMPLE: {
                sampleRadioButton.setSelected(true);
                break;
            }
            default:
                throw CodeAreaUtils.getInvalidTypeException(fillWithType);
        }
    }

    public long getDataLength() {
        return sizePanel.getValue();
    }

    public void setDataLength(long dataLength) {
        sizePanel.setValue(dataLength);
    }

    public void initFocus() {
        sizePanel.initFocus();
    }

    public void acceptInput() {
        sizePanel.acceptInput();
    }

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        WindowUtils.invokeDialog(new InsertDataPanel());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton emptyRadioButton;
    private javax.swing.JLabel fillWithLabel;
    private javax.swing.ButtonGroup fillWithbuttonGroup;
    private javax.swing.JRadioButton randomRadioButton;
    private javax.swing.JButton sampleDataButton;
    private javax.swing.JRadioButton sampleRadioButton;
    private javax.swing.JLabel sizeLabel;
    private org.exbin.framework.bined.gui.BaseSwitchableSpinnerPanel sizePanel;
    private javax.swing.JRadioButton spaceRadioButton;
    // End of variables declaration//GEN-END:variables

    public interface Controller {

        void sampleDataAction();
    }
}
